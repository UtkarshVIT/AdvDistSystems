version: '3'  # version of compose format 

services:
  loadbalancer:
      build: ./web/load-balancer
      tty: true
      links:
          - app1
          - app2
          - app3
      ports:
          - '8080:5000'
      volumes:
        - ./web/load-balancer/nginx.conf:/etc/nginx/nginx.conf
      depends_on:
        - app1
        - app2
        - app3
      networks:
        app_net:
          ipv4_address: 172.23.0.6

  app1:
    build: ./web  # path is relative to docker-compose.yml localtion
    entrypoint:
      - flask
      - run
      - --host=0.0.0.0
    environment:
      PYTHONUNBUFFERED: 0
      FLASK_DEBUG: 1
      FLASK_APP: ./app.py
    ports:
      - "8081:5000"  # host:container
    volumes: ['./web:/app']
    networks:
      app_net:
        ipv4_address: 172.23.0.3
    stdin_open: true
    tty: true

  app2:
    build: ./web  # path is relative to docker-compose.yml localtion
    entrypoint:
      - flask
      - run
      - --host=0.0.0.0
    environment:
      PYTHONUNBUFFERED: 0
      FLASK_DEBUG: 1
      FLASK_APP: ./app.py
    ports:
      - "8082:5000"  # host:container
    volumes: ['./web:/app']
    networks:
      app_net:
        ipv4_address: 172.23.0.4
    stdin_open: true
    tty: true

  app3:
    build: ./web  # path is relative to docker-compose.yml localtion
    entrypoint:
      - flask
      - run
      - --host=0.0.0.0
    environment:
      PYTHONUNBUFFERED: 0
      FLASK_DEBUG: 1
      FLASK_APP: ./app.py
    ports:
      - "8083:5000"  # host:container
    volumes: ['./web:/app']
    networks:
      app_net:
        ipv4_address: 172.23.0.5
    stdin_open: true
    tty: true

networks:
    app_net:
        ipam:
            driver: default
            config:
                - subnet: 172.23.0.0/16